<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!-- 핵심공통사항으로 사용할것임 -->
<bean id="greetingTarget" class="spring.aop.GreetingServiceImpl" p:greeting="hello"/>

<bean id="logAspect" class="spring.aop.LogAspect" />
<bean id="performanceAspect" class=“spring.aop.PerformanceAspect" />

<aop:config proxy-target-class="true">

<!—execution()이거라면~~ 포인트컷지정-->
<aop:pointcut id="publicMethod" expression="execution(public * *(..))" id="publicMethod" />

<!—publicMethod가 실행되면 logAspect속에 있는 beforLogging가 실행됨-->
<aop:aspect ref="logAspect">
<aop:before method="beforeLogging"           pointcut-ref="publicMethod"/>
<aop:after-returning method="afterLogging"   pointcut-ref="publicMethod" returning="returnValue" />
<aop:after-throwing method="throwingLogging" pointcut-ref="publicMethod" throwing="ex" />
<aop:after method="alwaysLogging"            pointcut-ref="publicMethod" />
</aop:aspect>

<aop:aspect ref="performanceAspect">
<!—publicMethod가 실행되면 timeCheck가 실행됨-->
<aop:around method="timeCheck" pointcut-ref="publicMethod"/>
</aop:aspect>

</aop:config>
</beans>
